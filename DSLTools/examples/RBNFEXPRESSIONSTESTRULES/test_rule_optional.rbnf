TERMINALS:
    name          ::= '[A-Za-z_][A-Za-z0-9_]*';
    number        ::= '[0-9]+';
    symbol        ::= '[:=#;(){}\[\]|.,<>+$^]';
    text          ::= '"[^"]*"';
    whitespace    ::= '\s+';

KEYS:
    'IF';
    'THEN';
    'ELSE';
    'ELSEIF';
    'END_IF';
    'FOR';
    'DO';
    'END_FOR';
    'REPEAT';
    'UNTIL';
    'WHILE';
    'END_WHILE';
    'FUNC';
    'END_FUNC';
    'PROC';
    'END_PROC';
    'ITERATOR';
    'END_ITERATOR';
    'INPUT';
    'OUTPUT';
    'GOTO';
    'ARRAY';
    'STRUCT';
    'SELECT';
    'YIELD';
    'RETURN';
    'NEXT';
    'FROM';
    'TO';
    'IN';
    'OF';
    '{';
    '}';
    ':';
    ';';
    '>';
    '+';
    '$';
    '^';
    ',';
    '(';
    ')';
    '//';

NONTERMINALS:
    Program; Statement; Block; Expression; FunctionCall; Arguments; Parameters;
    Range; Set; Variable; Identifier; Number; Text; Assignment; Conditional;
    Loop; LC; LA; LB; LS; FunctionDecl; ProcDecl; IteratorDecl; Input; Output;
    Comment; Goto; ArrayDecl; StructDecl; FieldDecl; Select; Yield; Return; NextFor;

AXIOM:
    Program

RULES:
    Conditional      ::= 'IF' Expression 'THEN' Block [ { 'ELSEIF' Expression 'THEN' Block } ] [ 'ELSE' Block ] 'END_IF';
    Arguments        ::= { Expression # ',' };
    Expression       ::= '$' ['^'] '$';
    FieldDecl        ::= Identifier ':' Identifier | Identifier ':' Statement;

