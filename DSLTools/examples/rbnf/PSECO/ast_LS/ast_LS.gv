digraph ast_LS {
	1 [label="NONTERMINAL
type: Rule" shape=box]
	2 [label="TERMINAL
type: name
string: LS" shape=diamond]
	1 -> 2
	3 [label="KEY
string: ::=" shape=oval]
	1 -> 3
	4 [label="NONTERMINAL
type: Alternative" shape=box]
	1 -> 4
	5 [label="KEY
string: ;" shape=oval]
	1 -> 5
	6 [label="NONTERMINAL
type: Sequence" shape=box]
	4 -> 6
	7 [label="NONTERMINAL
type: RuleElement" shape=box]
	6 -> 7
	8 [label="NONTERMINAL
type: RuleElement" shape=box]
	6 -> 8
	9 [label="NONTERMINAL
type: RuleElement" shape=box]
	6 -> 9
	10 [label="NONTERMINAL
type: RuleElement" shape=box]
	6 -> 10
	11 [label="NONTERMINAL
type: RuleElement" shape=box]
	6 -> 11
	12 [label="NONTERMINAL
type: RuleElement" shape=box]
	6 -> 12
	13 [label="NONTERMINAL
type: RuleElement" shape=box]
	6 -> 13
	14 [label="NONTERMINAL
type: Element" shape=box]
	7 -> 14
	15 [label="NONTERMINAL
type: Element" shape=box]
	8 -> 15
	16 [label="NONTERMINAL
type: Element" shape=box]
	9 -> 16
	17 [label="NONTERMINAL
type: Element" shape=box]
	10 -> 17
	18 [label="NONTERMINAL
type: Element" shape=box]
	11 -> 18
	19 [label="NONTERMINAL
type: Iteration" shape=box]
	12 -> 19
	20 [label="NONTERMINAL
type: Element" shape=box]
	13 -> 20
	21 [label="TERMINAL
type: key_name
string: 'FOR'" shape=diamond]
	14 -> 21
	22 [label="TERMINAL
type: name
string: Variable" shape=diamond]
	15 -> 22
	23 [label="TERMINAL
type: key_name
string: 'IN'" shape=diamond]
	16 -> 23
	24 [label="TERMINAL
type: name
string: Set" shape=diamond]
	17 -> 24
	25 [label="TERMINAL
type: key_name
string: 'DO'" shape=diamond]
	18 -> 25
	26 [label="KEY
string: {" shape=oval]
	19 -> 26
	27 [label="NONTERMINAL
type: Alternative" shape=box]
	19 -> 27
	28 [label="KEY
string: }" shape=oval]
	19 -> 28
	29 [label="TERMINAL
type: key_name
string: 'END_FOR'" shape=diamond]
	20 -> 29
	30 [label="NONTERMINAL
type: Sequence" shape=box]
	27 -> 30
	31 [label="NONTERMINAL
type: RuleElement" shape=box]
	30 -> 31
	32 [label="NONTERMINAL
type: Element" shape=box]
	31 -> 32
	33 [label="TERMINAL
type: name
string: Block" shape=diamond]
	32 -> 33
}
