TERMINALS:
    ID ::= '[a-zA-Z][a-zA-Z0-9_]*';
    TEXT ::= '[a-zA-Z0-9,.!? -]+';
    NUMBER ::= '[0-9]+';


KEYS:
     '->';
     '-->';
     '<->';
     '<-->';
     '--';
     '-';
     'circle';
     'rectangle';
     'diamond';
     'color';
     'text';
      'border';
      'x';
      'y';
      'size_text';
      'size_A';
      'size_B';
      '{';
      '}';
      ';';
      '=';
      'note';
      '@startgraph';
      '@endgraph'.


NONTERMINALS:
    PROGRAM;
    STATEMENTS;
    STATEMENT;
    OBJECT_DECL;
    RELATION;
    NOTE;
    GRAPH;
    DOT_CLOUD;
    PROPERTIES;
    PROPERTY;
    ARROW_SHAPE;
    ARROW;
    SHAPE;
    PROPERTY_KEY.


AXIOM: PROGRAM.


RULES:
    PROGRAM ::= '@startgraph' STATEMENTS '@endgraph';
    STATEMENTS :: = { STATEMENT };
    STATEMENT ::= OBJECT_DECL | RELATION | NOTE | GRAPH | DOT_CLOUD;
    OBJECT_DECL ::= SHAPE ID [ '{' PROPERTIES '}' ];
    RELATION ::= ID ARROW_SHAPE ID [ '{' PROPERTIES '}' ];
    NOTE ::= 'note' ID [ '{' PROPERTIES '}' ];
    GRAPH ::= ID [ '{' PROPERTIES '}' ] '{' { OBJECT_DECL | RELATION } '}';
    DOT_CLOUD ::= ID [ '{' PROPERTIES '}' ] '{' { OBJECT_DECL } '}';
    PROPERTIES ::= { PROPERTY # ; }
    PROPERTY ::= PROPERTY_KEY '=' (TEXT | NUMBER);
    ARROW_SHAPE ::= ARROW;
    ARROW ::= '->'| '-->' | '<->' | '<-->' | '--' | '-';
    SHAPE ::= 'circle' | 'rectangle' | 'diamond';
    PROPERTY_KEY ::= 'color' | 'text' | 'border' | 'x' | 'y' | 'size_text' | 'size_A' | 'size_B';


